{"version":3,"sources":["containers/HomePageContainer/HomePageContainer.tsx","components/ProductList/ProductList.tsx","components/ProductView/ProductView.tsx","components/ChartComponent/ChartComponent.tsx","App.js","serviceWorker.js","index.js"],"names":["HomePageContainer","props","axios","require","useState","searchTerm","setSearchTerm","error","setError","className","autoComplete","htmlFor","type","name","id","onChange","e","target","value","onClick","searchQuery","preventDefault","trim","length","setIsLoading","get","process","then","res","setSearchResults","data","catch","err","console","log","JSON","stringify","ProductList","products","productList","Array","isArray","map","val","index","key","brand","features","Object","entries","item","setProductSelected","isLoading","color","ProductView","productData","setProductData","loading","setLoading","useEffect","productSelected","feature","price","window","open","producturl","ChartComponent","completeHistory","setCompleteHistory","history","setHistory","setReload","historyRange","setHistoryRange","setHistoryLength","numberOfDays","t","i","priceData","temp","j","push","range","prefix","curve","xtitle","ytitle","thousands","round","zeros","messages","empty","App","searchResults","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e33999cc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./HomePageContainer.css\";\r\n\r\nfunction HomePageContainer(props: any) {\r\n  const axios = require(\"axios\");\r\n  // const types = [\"Processor\", \"Motherboard\", \"Graphics Card\"];\r\n  const [searchTerm, setSearchTerm] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  // const hyperlinks = types.map((val, index) => {\r\n  //   return (\r\n  //     <a href={\"/\" + val} key={index}>\r\n  //       {val}\r\n  //     </a>\r\n  //   );\r\n  // });\r\n  const getItems = (searchQuery: any) => {\r\n    if (searchQuery !== null && searchQuery.trim(\" \").length >= 3) {\r\n      props.setIsLoading(true);\r\n      setError(\"\");\r\n      axios\r\n        .get(process.env.REACT_APP_SERVER_URI + \"/search/\" + searchQuery)\r\n        .then((res: any) => {\r\n          props.setSearchResults(res.data);\r\n          props.setIsLoading(false);\r\n        })\r\n        .catch((err: any) => {\r\n          console.log(JSON.stringify(err));\r\n        });\r\n    } else {\r\n      setError(\"Search query must be greater than 2 letters!\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"searchContainer\">\r\n        <div className=\"message\">\r\n          This is the sample website. I have loaded a few products with random\r\n          data. Some of the products that you can search for are: 'Ryzen 9\r\n          3950X','Ryzen 7 3700X','Ryzen 7 3800X','Ryzen 7 3800XT','Ryzen 5 3500','Ryzen 5 3600','Ryzen 5 3600X' and 'Ryzen 5 3600XT'\r\n        </div>\r\n        <form autoComplete=\"off\">\r\n          <label htmlFor=\"search\">Search for an item</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            id=\"search\"\r\n            onChange={(e: any) => {\r\n              setSearchTerm(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            id=\"search\"\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              props.searchTerm(searchTerm);\r\n              getItems(searchTerm);\r\n            }}\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n        {error !== \"\" && <div className=\"error\">{error}</div>}\r\n        {/* {hyperlinks} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePageContainer;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./ProductList.css\";\r\n\r\nfunction ProductList(props: any) {\r\n  const products =\r\n    props.productList !== null &&\r\n    Array.isArray(props.productList) &&\r\n    props.productList.map((val: any, index: any) => {\r\n      return (\r\n        <div className=\"product\" key={index}>\r\n          <p>\r\n            {val.brand} {val.name}\r\n          </p>\r\n          {val.features !== null &&\r\n            Object.entries(val.features).map((item: any) => {\r\n              return (\r\n                <span key={item}>\r\n                  {item[1]} {item[0]}{\" \"}\r\n                </span>\r\n              );\r\n            })}\r\n          <p>Type: {val.type}</p>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              props.setProductSelected(val[\"_id\"]);\r\n            }}\r\n          >\r\n            More details\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  return (\r\n    <div className=\"product-container\">\r\n      {props.searchTerm === null && (\r\n        <div>Use the search bar to search for an item!</div>\r\n      )}\r\n      {props.isLoading === true && props.searchTerm !== null && (\r\n        <div>\r\n          <span className=\"search-text\">\r\n            Searching for the query: '{props.searchTerm}'\r\n          </span>\r\n          <ReactLoading\r\n            type=\"bars\"\r\n            color=\"#000000\"\r\n            className=\"loading-spinner\"\r\n          />\r\n        </div>\r\n      )}\r\n      {props.isLoading === false && props.productList.length === 0 && props.searchTerm !== null &&(\r\n        <div>No results found!</div>\r\n      )}\r\n      {props.isLoading === false && props.searchTerm !== null && props.productList.length !== 0 &&(\r\n        <div>\r\n          <span className=\"search-text\">\r\n            Search results for '{props.searchTerm}':\r\n          </span>\r\n          <div className=\"product-list\">{products}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ProductView.css\";\r\n\r\nfunction ProductView(props: any) {\r\n  const axios = require(\"axios\");\r\n  const [productData, setProductData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SERVER_URI+\"/\"+props.productSelected).then((res:any) => {\r\n        setProductData(res.data);\r\n        setLoading(false);\r\n      });\r\n  }, [props.productSelected, axios]);\r\n  return (\r\n    <div>\r\n      {!loading && (\r\n        <div className=\"product-details\">\r\n          <div className=\"title\">\r\n            {productData.type}: {productData.brand} {productData.name}\r\n          </div>\r\n          <div className=\"features\">\r\n            {Object.entries(productData[\"features\"]).map((feature: any) => {\r\n              return (\r\n                <div className=\"feature\" key={feature[0]}>\r\n                  <div className=\"name\">{feature[0]}:</div>\r\n                  <div className=\"value\">{feature[1]}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"prices\">\r\n            <div className=\"vendor-price header\">\r\n              <div className=\"price\">Price</div>\r\n              <div className=\"link-header\">Vendor</div>\r\n            </div>\r\n            {Object.entries(productData[\"currentprice\"]).map((price: any) => {\r\n              return (\r\n                <div className=\"vendor-price\">\r\n                  <div className=\"price\">₹{price[1]}</div>\r\n                  <button className=\"link\" onClick={() => window.open(productData.producturl[price[0]], '_blank)')}><span className=\"text\">{price[0]}</span></button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LineChart } from \"react-chartkick\";\r\nimport \"./ChartComponent.css\";\r\nimport \"chart.js\";\r\n\r\nfunction ChartComponent(props: any) {\r\n  const axios = require(\"axios\");\r\n  const [completeHistory, setCompleteHistory] = useState<any>([]);\r\n  const [history, setHistory] = useState<any>([]);\r\n  const [reload, setReload] = useState(true);\r\n  const [historyRange, setHistoryRange] = useState(0);\r\n  const setHistoryLength = (numberOfDays: number) => {\r\n    setReload(true);\r\n    setHistory([]);\r\n    var t = [];\r\n    for (var i = 0; i < completeHistory.length; i++) {\r\n      var priceData: any;\r\n      priceData = {};\r\n      if (numberOfDays < Object.entries(completeHistory[i].data).length) {\r\n        const temp: any = Object.entries(completeHistory[i].data);\r\n        for (var j = 0; j < numberOfDays; j++) {\r\n          priceData[temp[j][0]] = temp[j][1];\r\n        }\r\n      }\r\n      t.push({ name: completeHistory[i].name, data: priceData });\r\n    }\r\n    setHistory(t);\r\n    setReload(false);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SERVER_URI + \"/\"+ props.productSelected + \"/history\")\r\n      .then((res: any) => {\r\n        setCompleteHistory(res.data.history);\r\n        setHistory(res.data.history);\r\n        setHistoryRange(res.data.range);\r\n      });\r\n  }, [props.productSelected, axios]);\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <p>Price History</p>\r\n      <div>Click on the legend to toggle the vendors.</div>\r\n      <div>\r\n        {history !== [] && (\r\n          <LineChart\r\n            data={history}\r\n            prefix=\"₹\"\r\n            curve={false}\r\n            xtitle=\"Date\"\r\n            ytitle=\"Price\"\r\n            thousands=\",\"\r\n            round={2}\r\n            zeros={true}\r\n            messages={{ empty: \"No data\" }}\r\n          />\r\n        )}\r\n      </div>\r\n      {historyRange > 6 && (\r\n        <button\r\n          className=\"history-range-btn\"\r\n          onClick={() => setHistoryLength(7)}\r\n        >\r\n          Last 7 Days\r\n        </button>\r\n      )}\r\n      {historyRange > 29 && (\r\n        <button\r\n          className=\"history-range-btn\"\r\n          onClick={() => setHistoryLength(30)}\r\n        >\r\n          Last 1 Month\r\n        </button>\r\n      )}\r\n      {historyRange > 179 && (\r\n        <button\r\n          className=\"history-range-btn\"\r\n          onClick={() => setHistoryLength(180)}\r\n        >\r\n          Last 6 Months\r\n        </button>\r\n      )}\r\n      {historyRange > 364 && (\r\n        <button\r\n          className=\"history-range-btn\"\r\n          onClick={() => setHistoryLength(365)}\r\n        >\r\n          Last Year\r\n        </button>\r\n      )}\r\n      {historyRange !== 0 && (\r\n        <button\r\n          className=\"history-range-btn\"\r\n          onClick={() => setHistory(completeHistory)}\r\n        >\r\n          Complete History\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartComponent;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport HomePageContainer from \"../src/containers/HomePageContainer/HomePageContainer\";\nimport ProductList from \"./components/ProductList/ProductList\";\nimport ProductView from \"./components/ProductView/ProductView\";\nimport ChartComponent from \"./components/ChartComponent/ChartComponent\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productSelected, setProductSelected] = useState(null);\n  return (\n    <div className=\"App\">\n      {console.log(process.env.REACT_APP_SERVER_URI)}\n      <div className=\"title-bar\">PriceChecker</div>\n      <HomePageContainer\n        searchTerm={setSearchTerm}\n        setIsLoading={setIsLoading}\n        setSearchResults={setSearchResults}\n        productSelected={productSelected}\n      />\n      <ProductList\n        searchTerm={searchTerm}\n        isLoading={isLoading}\n        productList={searchResults}\n        setProductSelected={setProductSelected}\n      />\n      {productSelected !== null && (\n        <ProductView productSelected={productSelected} />\n      )}\n      {productSelected !== null && (\n        <ChartComponent productSelected={productSelected} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}